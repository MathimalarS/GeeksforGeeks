Given the two singly Linked Lists respectively. The task is to check whether two linked lists are identical or not. 
Two Linked Lists are identical when they have the same data and with the same arrangement too. If both Linked Lists are identical then return true otherwise return false. 
Input:
LinkedList1: 1->2->3->4->5->6
LinkedList2: 99->59->42->20
Output: false

Solution:

#include <iostream>

struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
};
bool areIdentical(struct Node *head1, struct Node *head2) {
    while (head1 != NULL && head2 != NULL) {
        if (head1->data != head2->data) {
            return false;
        }
        head1 = head1->next;
        head2 = head2->next;
    }
    
    return (head1 == NULL && head2 == NULL);
}

ListNode* newNode(int data) {
    ListNode* temp = new ListNode(data);
    return temp;
}
