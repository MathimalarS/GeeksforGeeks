class Solution {
    // Function to merge the arrays.
    public void mergeArrays(int a[], int b[]) {
        int n = a.length;
        int m = b.length;
        int gap = nextGap(n + m);

        while (gap > 0) {
            int i, j;

            // Compare elements in the first array.
            for (i = 0; i + gap < n; i++) {
                if (a[i] > a[i + gap]) {
                    // Swap if elements are out of order.
                    int temp = a[i];
                    a[i] = a[i + gap];
                    a[i + gap] = temp;
                }
            }

            // Compare elements between the first and second array.
            for (j = gap > n ? gap - n : 0; i < n && j < m; i++, j++) {
                if (a[i] > b[j]) {
                    // Swap if elements are out of order.
                    int temp = a[i];
                    a[i] = b[j];
                    b[j] = temp;
                }
            }

            // Compare elements in the second array.
            if (j < m) {
                for (j = 0; j + gap < m; j++) {
                    if (b[j] > b[j + gap]) {
                        // Swap if elements are out of order.
                        int temp = b[j];
                        b[j] = b[j + gap];
                        b[j + gap] = temp;
                    }
                }
            }

            // Reduce the gap for the next iteration.
            gap = nextGap(gap);
        }
    }

    // Function to calculate the next gap.
    private int nextGap(int gap) {
        if (gap <= 1) return 0;
        return (gap + 1) / 2;
    }
}
